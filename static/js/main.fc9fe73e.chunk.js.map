{"version":3,"sources":["graphql/getDataPokemon.js","components/Pokemon.js","components/Button.js","containers/PokemonContainer.js","components/PokemonDetail.js","components/ModalCatch.js","containers/PokemonDetailContainer.js","components/PokemonList.js","containers/MyPokemonContainer.js","App.js","index.js"],"names":["GET_POKEMONS","gql","GET_POKEMON_DETAIL","Pokemon","props","localPokemonCounter","localPokemon","JSON","parse","localStorage","getItem","map","data","pokemon","name","capitalizeFLetter","charAt","toUpperCase","slice","styleText","css","styleImage","Separator","styled","left","src","image","alt","right","Button","button","width","height","onClick","handleChange","PokemonContainer","pokemonList","buttonSize","eachPokemon","useState","stateLimit","stateOffset","setStateOffset","prevOffset","nextOffset","gqlVariables","limit","offset","useQuery","variables","loading","error","message","pokemons","pokemonsData","results","to","style","textDecoration","key","reason","styleContainer","styleImageDiv","styleDetailDiv","styleProperty","typesList","types","type","movesList","moves","move","sprites","front_default","ModalCatch","showHideClassName","show","className","handleClose","headerTitle","children","match","container","ButtonDivUpper","ButtonDivLower","isShowAdd","setStateModal","nickname","setStateNickname","params","PokemonDetail","Math","random","alert","placeholder","onChange","e","target","value","checkNickname","push","setItem","stringify","PokemonList","containerPokemon","PokemonName","PokemonNickname","capitalizeLetter","MyPokemonContainer","containerPokemonList","currState","state","setState","deletePokemon","indexDeleted","index","splice","length","App","client","ApolloClient","uri","cache","InMemoryCache","pokedexContainer","path","exact","component","PokemonDetailContainer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc9fe73e.chunk.js","sourcesContent":["import { gql } from '@apollo/client'\r\n\r\nexport const GET_POKEMONS = gql`\r\n    query pokemons($limit: Int, $offset: Int) {\r\n        pokemons(limit: $limit, offset: $offset) {\r\n            nextOffset\r\n            prevOffset\r\n            results {\r\n                url\r\n                name\r\n                image\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const GET_POKEMON_DETAIL = gql`\r\n    query pokemon($name: String!) {\r\n        pokemon(name: $name) {\r\n            id\r\n            name\r\n            abilities {\r\n                ability {\r\n                    name\r\n                }\r\n            }\r\n            moves {\r\n                move {\r\n                    name\r\n                }\r\n            }\r\n            types {\r\n                type {\r\n                    name\r\n                }\r\n            }\r\n            sprites {\r\n                front_default,\r\n                back_default\r\n            }\r\n            message\r\n            status\r\n        }\r\n    }\r\n`","import React from 'react'\r\n/** @jsx jsx */ /** @jsxRuntime classic */\r\nimport { jsx, css } from '@emotion/react'\r\nimport styled from '@emotion/styled'\r\n\r\nfunction Pokemon(props) {\r\n    \r\n    let localPokemonCounter = 0\r\n    let localPokemon = JSON.parse(localStorage.getItem(\"myPokemon\"))\r\n    \r\n    if (localPokemon) {\r\n        const countingPokemon = localPokemon.map(data => {\r\n            if (data[0] === props.pokemon.name) {\r\n                localPokemonCounter += 1\r\n            }\r\n        })\r\n    }\r\n    \r\n    const capitalizeFLetter = props.pokemon.name.charAt(0).toUpperCase() + props.pokemon.name.slice(1)\r\n\r\n    const styleText = css`\r\n        background-color: #e6e6e6;\r\n        border-radius: 15px;\r\n        padding: 3px;\r\n        color: black;\r\n        font-size: 20px;\r\n        text-decoration: none;\r\n    `\r\n    const styleImage = css`\r\n        height: 100%;\r\n    `\r\n\r\n    const Separator = styled('div')`\r\n        width: ${props => props.left ? `40%` : `60%`};\r\n        text-align: ${props => props.left ? `center` : ``};\r\n        display: inline-block;\r\n        vertical-align: top;\r\n    `\r\n\r\n    return (\r\n        <div css={styleText}>\r\n            <Separator left>\r\n                <img css={styleImage} src={props.pokemon.image} alt={props.pokemon.name} />\r\n            </Separator>\r\n            <Separator right>\r\n                <p>{capitalizeFLetter}</p>\r\n                <p>Owned : {localPokemonCounter}</p>\r\n            </Separator>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pokemon","import React from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\nfunction Button(props) {\r\n\r\n    const Button = styled.button`\r\n        background-color: red;\r\n        border-radius: 5px;\r\n        color: white;\r\n        width: ${props.width}px;\r\n        height: ${props.height}px;\r\n        box-shadow: 2px 3px blue;\r\n    `\r\n\r\n    return (\r\n        <Button onClick={() => props.handleChange? props.handleChange() : void 0}>{props.name}</Button>\r\n    )\r\n}\r\n\r\nexport default Button","import React, { useState, useEffect } from 'react'\r\nimport { useQuery } from '@apollo/client'\r\nimport { GET_POKEMONS } from '../graphql/getDataPokemon'\r\nimport {Link} from 'react-router-dom'\r\n/** @jsx jsx */ /** @jsxRuntime classic */\r\nimport { jsx, css } from '@emotion/react'\r\n\r\nimport Pokemon from '../components/Pokemon'\r\nimport Button from '../components/Button'\r\n\r\nfunction PokemonContainer() {\r\n\r\n    const pokemonList = css`\r\n        width: 100%;\r\n    `\r\n\r\n    const buttonSize = css `\r\n        text-align: center;\r\n        margin-bottom: 5px;\r\n    `\r\n    \r\n    const eachPokemon = css`\r\n        width: 95%;\r\n        margin: 0 auto;\r\n        padding: 5px;\r\n    `\r\n\r\n    const[stateLimit] = useState(6)\r\n    const[stateOffset, setStateOffset] = useState(0)\r\n\r\n    let prevOffset = 0\r\n    let nextOffset = 0\r\n\r\n    const gqlVariables = {\r\n        limit: stateLimit,\r\n        offset: stateOffset,\r\n    }\r\n\r\n    const { loading, error, data } = useQuery(GET_POKEMONS, {\r\n        variables: gqlVariables,\r\n    })\r\n      \r\n    if (loading) return 'Loading...'\r\n    if (error) return `Error! ${error.message}`\r\n    if (data) {\r\n        prevOffset = data.pokemons.prevOffset\r\n        nextOffset = data.pokemons.nextOffset\r\n    }\r\n\r\n    const pokemonsData = data.pokemons.results.map(pokemon => {\r\n        return (\r\n            <div css={eachPokemon}>\r\n                <Link to={`/detail/${pokemon.name}`} style={{ textDecoration: 'none' }}>\r\n                    <Pokemon key={pokemon.name} pokemon={pokemon} />\r\n                </Link>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    const getPrevData = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setStateOffset(prevOffset)\r\n    };\r\n    \r\n    const getNextData = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setStateOffset(nextOffset)\r\n    };\r\n\r\n    return (\r\n        <div css={pokemonList}>\r\n            <div css={buttonSize}>\r\n                <Link to={`/pokemon-list`}>\r\n                    <Button name=\"My Pokemon\" width=\"120\" height=\"40\"></Button>\r\n                </Link>\r\n            </div>\r\n            {pokemonsData}\r\n            <div css={buttonSize}>\r\n                <Button name=\"<\" width=\"120\" height=\"40\" handleChange={getPrevData}></Button>\r\n                &emsp;\r\n                <Button name=\">\" width=\"120\" height=\"40\" handleChange={getNextData}></Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokemonContainer","import React from 'react'\r\n/** @jsx jsx */ /** @jsxRuntime classic */\r\nimport { jsx, css } from '@emotion/react'\r\n\r\nfunction Pokemon(props) {\r\n    \r\n    const styleContainer = css`\r\n        bottom: 0px;\r\n    `\r\n\r\n    const styleImageDiv = css`\r\n        text-align: center;\r\n    `\r\n    const styleImage = css`\r\n        width: 40%;\r\n        @media (max-width: 800px) {\r\n          width: 45%;\r\n        }\r\n    `\r\n\r\n    const styleDetailDiv = css`\r\n        padding: 20px;\r\n        background-color: #e6e6e6;\r\n        border-radius: 45px 45px 0px 0px;\r\n    `\r\n\r\n    const styleProperty = css`\r\n        display: inline-block;\r\n        vertical-align: top;\r\n        background-color: #919191;\r\n        border-radius: 5px;\r\n        margin-right: 5px;\r\n        margin-bottom: 5px;\r\n        padding: 5px;\r\n        color: white;\r\n    `\r\n\r\n    const typesList = props.pokemon.types.map(type => {\r\n        return (\r\n            <div css={styleProperty}>{type.type.name}</div>\r\n        )\r\n    })\r\n\r\n    const movesList = props.pokemon.moves.map(move => {\r\n        return (\r\n            <div css={styleProperty}>{move.move.name}</div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div css={styleContainer}>\r\n            <div css={styleImageDiv}>\r\n                <img css={styleImage} src={props.pokemon.sprites.front_default} alt={props.pokemon.name} />\r\n            </div>\r\n            <div css={styleDetailDiv}>\r\n                <p>Types : </p>\r\n                {typesList}\r\n                <p>Moves : </p>\r\n                {movesList}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pokemon","import React from 'react'\r\n\r\nimport '../styles/modal.css'\r\n\r\nfunction ModalCatch(props) {\r\n    const showHideClassName = props.show ? \"modal display-block\" : \"modal display-none\";\r\n\r\n    return (\r\n        <div className={showHideClassName}>\r\n            <div className=\"modal-content\">\r\n            <span className=\"close\" onClick={props.handleClose}>&times;</span>\r\n            <p>{props.headerTitle}</p>\r\n            <br/>\r\n            {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalCatch","import React, { useState } from 'react'\r\nimport { useQuery } from '@apollo/client'\r\nimport { GET_POKEMON_DETAIL } from '../graphql/getDataPokemon'\r\nimport {Link} from 'react-router-dom'\r\n/** @jsx jsx */ /** @jsxRuntime classic */\r\nimport { jsx, css } from '@emotion/react'\r\nimport styled from '@emotion/styled'\r\n\r\nimport PokemonDetail from '../components/PokemonDetail'\r\nimport Modal from '../components/ModalCatch'\r\nimport Button from '../components/Button'\r\n\r\nfunction PokemonContainer({match}) {\r\n\r\n    const container = css`\r\n        width: 95%;\r\n        margin: 0 auto;\r\n        padding: 5px;\r\n    `\r\n\r\n    const ButtonDivUpper = styled('div')`\r\n        text-align: center;\r\n    `\r\n\r\n    const ButtonDivLower = styled('div')`\r\n        text-align: center;\r\n        margin-top: 15px;\r\n        margin-bottom: 10px;\r\n    `\r\n\r\n    const[isShowAdd, setStateModal] = useState(false)\r\n    const[nickname, setStateNickname] = useState('')\r\n\r\n    const gqlVariables = {\r\n        name: match.params.name\r\n    }\r\n\r\n    const { loading, error, data } = useQuery(GET_POKEMON_DETAIL, {\r\n        variables: gqlVariables,\r\n    })\r\n      \r\n    if (loading) return 'Loading...'\r\n    if (error) return `Error! ${error.message}`\r\n\r\n    function catchPokemon() {\r\n        if (Math.random() > 0.5) {\r\n            setStateModal(true)\r\n            alert('Catch Success! Please Input Nickname to Your Pokemon!')\r\n        }\r\n        else {\r\n            alert('Catch Failed! Please Try Aain!')\r\n        }\r\n    }\r\n\r\n    function closeModalCatchHandler(){\r\n        setStateModal(false)\r\n    }\r\n\r\n    function handleChange(e) {\r\n        setStateNickname(e.target.value);\r\n    }\r\n\r\n    function insertPokemon() {\r\n        let checkNickname = 0\r\n        let pokemon = []\r\n        let localPokemon = JSON.parse(localStorage.getItem(\"myPokemon\"))\r\n        \r\n        if (localPokemon === null) {\r\n            pokemon.push([match.params.name, nickname])\r\n        }\r\n        else {\r\n            localPokemon.map(data => {\r\n                if (data[1] === nickname && data[0] === match.params.name) {\r\n                    checkNickname = 1\r\n                }\r\n            })\r\n            localPokemon.push([match.params.name, nickname])\r\n            pokemon = localPokemon\r\n        }\r\n        \r\n        if (checkNickname === 1) {\r\n            alert('Nickname Already Exist!')\r\n        }\r\n        else {\r\n            localStorage.setItem('myPokemon', JSON.stringify(pokemon));\r\n            setStateModal(false)\r\n            alert('Catch Success!')\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div css={container}>\r\n            <ButtonDivUpper>\r\n                <Link to={`/`}>\r\n                    <Button name=\"Home\" width=\"120\" height=\"40\"></Button>\r\n                </Link>\r\n                &emsp;\r\n                <Link to={`/pokemon-list`}>\r\n                    <Button name=\"My Pokemon\" width=\"120\" height=\"40\"></Button>\r\n                </Link>\r\n            </ButtonDivUpper>\r\n            <PokemonDetail key={data.pokemon} pokemon={data.pokemon}/>\r\n            <ButtonDivLower>\r\n                <Button name=\"Catch Me\" width=\"120\" height=\"40\" handleChange={catchPokemon}></Button>\r\n            </ButtonDivLower>\r\n            \r\n            <Modal show={isShowAdd} handleClose={closeModalCatchHandler} headerTitle=\"Input Nickname\">\r\n                <input placeholder=\"Input Nickname\" onChange={handleChange}/>\r\n                <button onClick={insertPokemon}>Submit</button>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokemonContainer","import React from 'react'\r\nimport { useQuery } from '@apollo/client'\r\nimport { GET_POKEMON_DETAIL } from '../graphql/getDataPokemon'\r\n/** @jsx jsx */ /** @jsxRuntime classic */\r\nimport { jsx, css } from '@emotion/react'\r\nimport styled from '@emotion/styled'\r\n\r\nfunction PokemonList(props) {\r\n    \r\n    const containerPokemon = css`\r\n        text-align: center;\r\n        padding: 10px;\r\n        background-color: #e6e6e6;\r\n        width: 28%;\r\n        border-radius: 15px;\r\n        display: inline-block;\r\n        vertical-align: top;\r\n        margin-right: 10px;\r\n        margin-bottom: 10px;\r\n        word-wrap: break-word;\r\n        @media (max-width: 1200px) {\r\n          width: 40%;\r\n        }\r\n        @media (max-width: 800px) {\r\n          width: 40%;\r\n        }\r\n        @media (max-width: 600px) {\r\n          width: 80%;\r\n        }\r\n    `\r\n\r\n    const styleImage = css`\r\n        width: 70%;\r\n    `\r\n\r\n    const PokemonName = styled('div')`\r\n        font-size: 25px;\r\n    `\r\n    \r\n    const PokemonNickname = styled('div')`\r\n        font-size: 15px;\r\n        font-style: italic;\r\n    `\r\n\r\n    const Button = styled('button')`\r\n        background-color: red;\r\n        border-radius: 5px;\r\n        color: white;\r\n        width: 90%;\r\n        box-shadow: 1px 1px blue;\r\n    `\r\n\r\n    const gqlVariables = {\r\n        name: props.name\r\n    }\r\n\r\n    const { loading, error, data } = useQuery(GET_POKEMON_DETAIL, {\r\n        variables: gqlVariables,\r\n    })\r\n      \r\n    if (loading) return 'Loading...'\r\n    if (error) return `Error! ${error.message}`\r\n    \r\n    const capitalizeLetter = data.pokemon.name.charAt(0).toUpperCase() + data.pokemon.name.slice(1)\r\n\r\n    return (\r\n        <div css={containerPokemon}>\r\n            <img css={styleImage} src={data.pokemon.sprites.front_default} alt={data.pokemon.name} />\r\n            <PokemonName>{capitalizeLetter}</PokemonName>\r\n            <PokemonNickname>{props.nickname}</PokemonNickname>\r\n            <Button onClick={() => props.handleChange? props.handleChange() : void 0}>Release</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokemonList","import React, { useState } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n/** @jsx jsx */ /** @jsxRuntime classic */\r\nimport { jsx, css } from '@emotion/react'\r\nimport styled from '@emotion/styled'\r\n\r\nimport PokemonList from '../components/PokemonList'\r\nimport Button from '../components/Button'\r\n\r\nfunction MyPokemonContainer({match}) {\r\n    \r\n    const buttonSize = css `\r\n        text-align: center;\r\n        margin-bottom: 15px;\r\n    `\r\n\r\n    const container = css`\r\n        width: 95%;\r\n        margin: 0 auto;\r\n        padding: 5px;\r\n    `\r\n\r\n    const containerPokemonList = css`\r\n        text-align: center;\r\n    `\r\n\r\n    const PokemonTotal = styled('div')`\r\n        text-align: center;\r\n        width: 50%;\r\n        border-radius: 15px;\r\n        border: 1px solid black;\r\n    `\r\n\r\n    let localPokemon = JSON.parse(localStorage.getItem(\"myPokemon\"))\r\n    let currState = []\r\n\r\n    if (localPokemon) {\r\n        currState = localPokemon\r\n    }\r\n\r\n    const [state, setState] = useState(currState)\r\n\r\n    function deletePokemon(pokemon, nickname) {\r\n        let indexDeleted = -1\r\n        localPokemon.map((data, index) => {\r\n            if (data[0] === pokemon && data[1] === nickname) {\r\n                indexDeleted = index\r\n            }\r\n        })\r\n        localPokemon.splice(indexDeleted, 1)\r\n        localStorage.setItem('myPokemon', JSON.stringify(localPokemon));\r\n        setState(JSON.parse(localStorage.getItem(\"myPokemon\")))\r\n    }\r\n\r\n    const listTable = state.map((data, index) => {\r\n        return (\r\n            <tr>\r\n                <td>{index+1}</td>\r\n                <td>{data[0]}</td>\r\n                <td>{data[1]}</td>\r\n                <td><button onClick={() => { deletePokemon(data[0], data[1]) }}>Delete</button></td>\r\n            </tr>\r\n        )\r\n    })\r\n    \r\n    const pokemonList = state.map(data => {\r\n        return (\r\n            <PokemonList name={data[0]} nickname={data[1]} handleChange={() => deletePokemon(data[0], data[1])}></PokemonList>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div css={container}>\r\n            <div css={buttonSize}>\r\n                <Link to={`/`}>\r\n                    <Button name=\"Home\" width=\"120\" height=\"40\"></Button>\r\n                </Link>\r\n            </div>\r\n            <div css={containerPokemonList}>\r\n                {pokemonList.length > 0 ? pokemonList : 'Please Catch Pokemon First!'}\r\n            </div>\r\n            {/* <table>\r\n                <thead>\r\n                    <tr>\r\n                        <td>Number</td>\r\n                        <td>Pokemon</td>\r\n                        <td>Nickname</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {listTable}\r\n                </tbody>\r\n            </table> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPokemonContainer","import './App.css'\r\nimport React from 'react'\r\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client'\r\nimport { HashRouter, BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n/** @jsx jsx */ /** @jsxRuntime classic */\r\nimport { jsx, css } from '@emotion/react'\r\n\r\nimport PokemonContainer from './containers/PokemonContainer'\r\nimport PokemonDetailContainer from './containers/PokemonDetailContainer'\r\nimport MyPokemonContainer from './containers/MyPokemonContainer'\r\n\r\nfunction App() {\r\n  \r\n  const client = new ApolloClient({\r\n    uri : 'https://graphql-pokeapi.vercel.app/api/graphql',\r\n    cache: new InMemoryCache()\r\n  })\r\n\r\n  const pokedexContainer = css`\r\n    font-family:'Roboto', sans-serif;\r\n    width: 50%;\r\n    margin-left: 25%;\r\n    padding-top: 10px;\r\n    padding-bottom: 10px;\r\n    @media (max-width: 800px) {\r\n      width: 100%;\r\n      margin-left: 0%;\r\n    }\r\n  `\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <HashRouter>\r\n            <div css={pokedexContainer}>\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={PokemonContainer}/>\r\n                    <Route path=\"/detail/:name\" component={PokemonDetailContainer}/>\r\n                    <Route path=\"/pokemon-list/\" component={MyPokemonContainer}/>\r\n                </Switch>\r\n            </div>\r\n        </HashRouter>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}